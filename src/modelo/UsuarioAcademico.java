/**
 * This file was generated by the Jeddict
 */
package modelo;

import java.util.ArrayList;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.MappedSuperclass;
import javax.persistence.OneToMany;

/**
 * @author Admin
 */
@MappedSuperclass
public abstract class UsuarioAcademico extends Usuario {

    @Basic
    private Integer votosPositivos;

    @Basic
    private Integer votosNegativos;

    @OneToMany(targetEntity = Pregunta.class)
    private List<Pregunta> preguntas;

    @OneToMany(targetEntity = Respuesta.class)
    private List<Respuesta> respuestas;

    @OneToMany(targetEntity = Voto.class)
    private List<Voto> votos;

    public UsuarioAcademico() {
        super();
        this.votosNegativos = 0;
        this.votosPositivos = 0;
        this.preguntas = new ArrayList<>();
        this.respuestas = new ArrayList<>();
        this.votos = new ArrayList<>();

    }

    public UsuarioAcademico(String apellido, String nombre, String dni, String correo) {
        super(apellido, nombre, dni, correo);
        this.votosNegativos = 0;
        this.votosPositivos = 0;
        this.preguntas = new ArrayList<>();
        this.respuestas = new ArrayList<>();
        this.votos = new ArrayList<>();

    }

    public Integer getVotosPositivos() {
        return this.votosPositivos;
    }

    public void setVotosPositivos(Integer votosPositivos) {
        this.votosPositivos = votosPositivos;
    }

    public Integer getVotosNegativos() {
        return this.votosNegativos;
    }

    public void setVotosNegativos(Integer votosNegativos) {
        this.votosNegativos = votosNegativos;
    }

    public List<Pregunta> getPreguntas() {
        return this.preguntas;
    }

    public void setPreguntas(List<Pregunta> preguntas) {
        this.preguntas = preguntas;
    }

    public List<Respuesta> getRespuestas() {
        return this.respuestas;
    }

    public void setRespuestas(List<Respuesta> respuestas) {
        this.respuestas = respuestas;
    }

    public List<Voto> getVotos() {
        return this.votos;
    }

    public void setVotos(List<Voto> votos) {
        this.votos = votos;
    }

    public List obtenerDatos() {
        List<Object> datos = new ArrayList<>();
        datos.add(this.getApellido());
        datos.add(this.getNombre());
        datos.add(this.getCorreo());
        datos.add(this.getPreguntas().size());
        datos.add(this.getRespuestas().size());
        return datos;
    }

    public void agregarRespuesta(Respuesta e) {
        this.getRespuestas().add(e);
    }

    public void agregarPregunta(Pregunta e) {
        this.getPreguntas().add(e);
    }
}
