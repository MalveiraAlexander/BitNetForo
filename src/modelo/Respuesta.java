/**
 * This file was generated by the Jeddict
 */
package modelo;

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import java.util.ArrayList;
import java.util.Objects;
import javax.persistence.ManyToOne;
import javax.persistence.Temporal;

/**
 * @author Admin
 */
@Entity
public class Respuesta implements Serializable, Comparable<Respuesta> {

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE)
    private Long id;
    private String respuesta;
    @Basic
    private Integer votosPositivos;
    @Basic
    private String titulo;
    @Basic
    private Integer votosNegativos;
    @Temporal(javax.persistence.TemporalType.TIMESTAMP)
    private Date fechaPublicacion;
    @OneToMany(targetEntity = Voto.class)
    private List<Voto> votos;
    @ManyToOne
    private Estudiante estudiante;
    @ManyToOne
    private Profesor profesor;
    @ManyToOne
    private Administrador administrador;

    public Respuesta() {
        votos = new ArrayList<>();
        this.votosNegativos = 0;
        this.votosPositivos = 0;
        this.fechaPublicacion = new Date();
    }

    public Respuesta(String resp, String titu, Estudiante estudiante, Profesor profesor, Administrador administrador) {
        this.respuesta = resp;
        votos = new ArrayList<>();
        this.titulo = titu;
        if (estudiante != null) {
            this.estudiante = estudiante;
            this.profesor = null;
            this.administrador = null;
        } else {
            if (profesor != null) {
                this.estudiante = null;
                this.profesor = profesor;
                this.administrador = null;
            } else {
                this.estudiante = null;
                this.profesor = null;
                this.administrador = administrador;
            }
        }
        this.votosNegativos = 0;
        this.votosPositivos = 0;
        this.fechaPublicacion = new Date();
    }

    public String getRespuesta() {
        return respuesta;
    }

    public void setRespuesta(String respuesta) {
        this.respuesta = respuesta;
    }

    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Integer getVotosPositivos() {
        return this.votosPositivos;
    }

    public void setVotosPositivos(Integer votosPositivos) {
        this.votosPositivos = votosPositivos;
    }

    public Integer getVotosNegativos() {
        return this.votosNegativos;
    }

    public void setVotosNegativos(Integer votosNegativos) {
        this.votosNegativos = votosNegativos;
    }

    public Date getFechaPublicacion() {
        return this.fechaPublicacion;
    }

    public void setFechaPublicacion(Date fechaPublicacion) {
        this.fechaPublicacion = fechaPublicacion;
    }

    public List<Voto> getVotos() {
        return this.votos;
    }

    public void setVotos(List<Voto> votos) {
        this.votos = votos;
    }

    @Override
    public String toString() {
        return titulo;

    }

    public Estudiante getEstudiante() {
        return estudiante;
    }

    public void setEstudiante(Estudiante estudiante) {
        this.estudiante = estudiante;
    }

    public Profesor getProfesor() {
        return profesor;
    }

    public void setProfesor(Profesor profesor) {
        this.profesor = profesor;
    }

    public Administrador getAdministrador() {
        return administrador;
    }

    public void setAdministrador(Administrador administrador) {
        this.administrador = administrador;
    }
//obtengo el que realizo la pregunta como solo puede ser un usuario se va comparando

    public UsuarioAcademico obtenerPublicador() {
        if (this.estudiante != null) {
            return this.estudiante;
        } else {
            if (this.profesor != null) {
                return this.profesor;
            } else {
                if (this.administrador != null) {
                    return this.administrador;
                }
            }
        }
        return null;
    }

    public String getTitulo() {
        return titulo;
    }

    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }
// existen 3 casos 1) que el voto sea nuevo se inserta normalmente ;;; 2) que el voto ya exista pero  sea del mismo tipo;; 3) que el voto ya exista pero sean de distintos tipos

    public void agregarVoto(Voto voto) {
        this.votos.add(voto);
        // si el voto ya existe 
        Boolean existe = false;
        for (Voto prueba : this.votos) {
            if (prueba.getId() == voto.getId()) {
                existe = true;
                //caso 3) si son de distintos tipos ("me gusta", "no me gusta"), caso 2) si son iguales no hace nada ya que son el mismo voto
                if (!Objects.equals(voto.isVoto(), prueba.isVoto())) {
                    if (voto.isVoto()) {
                        this.votosPositivos++;
                        if (estudiante != null) {
                            estudiante.setReputacion(estudiante.getReputacion() + 1);

                        } else {
                            if (profesor != null) {
                                profesor.setReputacion(profesor.getReputacion() + 1);
                            }
                        }
                        this.votosNegativos--;
                    } else {

                        this.votosPositivos--;
                        if (estudiante != null) {
                            estudiante.setReputacion(estudiante.getReputacion() - 1);

                        } else {
                            if (profesor != null) {
                                profesor.setReputacion(profesor.getReputacion() - 1);

                            }
                        }
                        this.votosNegativos++;
                    }
                }
            }
        }
        //si existe el voto no ingreso, este es el caso 1)
        if (!existe) {
            if (voto.isVoto()) {
                this.votosPositivos++;
                if (estudiante != null) {
                    estudiante.setReputacion(estudiante.getReputacion() + 1);

                } else {
                    if (profesor != null) {
                        profesor.setReputacion(profesor.getReputacion() + 1);

                    }
                }
            } else {
                this.votosNegativos++;
                if (estudiante != null) {
                    estudiante.setReputacion(estudiante.getReputacion() - 1);

                } else {
                    if (profesor != null) {
                        profesor.setReputacion(profesor.getReputacion() - 1);

                    }
                }
            }
        }

    }

    @Override
    public int compareTo(Respuesta o) {
        if (this.fechaPublicacion.getTime() < o.getFechaPublicacion().getTime()) {
            return -1;
        }
        if (this.fechaPublicacion.getTime() > o.getFechaPublicacion().getTime()) {
            return 1;
        }
        return 0;
    }

}
